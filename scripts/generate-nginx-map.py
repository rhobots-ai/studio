#!/usr/bin/env python3
"""
Generate Nginx deployment mapping file
This script reads the deployments.json file and creates an Nginx map file
that maps deployment IDs to their backend ports.
"""

import json
import os
import sys
from pathlib import Path

def generate_nginx_map():
    """Generate Nginx map file from deployments.json"""
    
    # Path to deployments file
    deployments_file = "deployments.json"
    
    if not os.path.exists(deployments_file):
        print("No deployments.json file found")
        return
    
    try:
        with open(deployments_file, 'r') as f:
            deployments = json.load(f)
        
        # Generate map content
        map_content = []
        map_content.append("# Auto-generated deployment mapping")
        map_content.append("# Maps deployment IDs to backend ports")
        map_content.append("# Generated by generate-nginx-map.py")
        map_content.append("")
        
        active_deployments = 0
        for deployment in deployments:
            if deployment.get('status') == 'running':
                deployment_id = deployment.get('deployment_id', '')
                port = deployment.get('port', '')
                if deployment_id and port:
                    map_content.append(f"{deployment_id} {port};")
                    active_deployments += 1
        
        # Add default case
        map_content.append("default 0;")
        map_content.append("")
        map_content.append(f"# Total active deployments: {active_deployments}")
        
        # Write to nginx map file
        nginx_map_file = "/etc/nginx/deployment-map.conf"
        temp_map_file = "deployment-map.conf"
        
        with open(temp_map_file, 'w') as f:
            f.write('\n'.join(map_content))
        
        print(f"Generated {temp_map_file} with {active_deployments} active deployments")
        print("To apply to Nginx:")
        print(f"sudo cp {temp_map_file} {nginx_map_file}")
        print("sudo nginx -t && sudo systemctl reload nginx")
        
    except Exception as e:
        print(f"Error generating Nginx map: {e}")
        sys.exit(1)

if __name__ == "__main__":
    generate_nginx_map()
